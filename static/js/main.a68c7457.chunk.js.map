{"version":3,"sources":["context/TodoContext.js","context/action.types.js","context/reducer.js","Components/TodoForm.js","Components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["TodoContext","createContext","ADD_TODO","REMOVE_TODO","state","action","type","payload","filter","todo","id","TodoForm","useState","todoString","setTodoString","dispatch","useContext","Form","onSubmit","e","preventDefault","alert","uuidv4","FormGroup","InputGroup","Input","name","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","Todos","todos","ListGroup","className","map","ListGroupItem","onClick","App","useReducer","todoReducer","Provider","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAEaA,G,YAAcC,2B,QCFdC,EAAW,WACXC,EAAc,cCCZ,WAACC,EAAOC,GACrB,OAAQA,EAAOC,MACb,KAAKJ,EACH,MAAM,GAAN,mBAAWE,GAAX,CAAkBC,EAAOE,UAE3B,KAAKJ,EACH,OAAOC,EAAMI,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOL,EAAOE,WAEnD,QACE,OAAOH,I,+DCsDEO,EAnDE,WACf,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACQC,EAAaC,qBAAWhB,GAAxBe,SAsBR,OACE,cAACE,EAAA,EAAD,CAAMC,SArBa,SAACC,GAEpB,GADAA,EAAEC,iBACiB,KAAfP,EACF,OAAOQ,MAAM,uBAGf,IAAMZ,EAAO,CACXI,aACAH,GAAIY,eAGNP,EAAS,CACPT,KAAMJ,EACNK,QAASE,IAGXK,EAAc,KAKd,SACE,cAACS,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEnB,KAAK,OACLoB,KAAK,OACLhB,GAAG,OACHiB,YAAY,iBACZC,MAAOf,EACPgB,SAAU,SAACV,GAAD,OAAOL,EAAcK,EAAEW,OAAOF,UAG1C,cAACG,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,UADR,2B,wBCtBGC,EAxBD,WACZ,MAA4BnB,qBAAWhB,GAA/BoC,EAAR,EAAQA,MAAOrB,EAAf,EAAeA,SAEf,OACE,cAACsB,EAAA,EAAD,CAAWC,UAAU,kBAArB,SACGF,EAAMG,KAAI,SAAC9B,GAAD,OACT,eAAC+B,EAAA,EAAD,WACG/B,EAAKI,WACN,sBAAMyB,UAAU,cACdG,QAAS,WACP1B,EAAS,CACPT,KAAMH,EACNI,QAASE,EAAKC,MAJpB,SAQE,cAAC,IAAD,QAVgBD,EAAKC,UCalBgC,EAdH,WACV,MAA0BC,qBAAWC,EAAa,IAAlD,mBAAOR,EAAP,KAAcrB,EAAd,KACA,OACE,cAACf,EAAY6C,SAAb,CAAsBjB,MAAO,CAACQ,QAAOrB,YAArC,SACE,eAAC+B,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,2DACA,cAAC,EAAD,IACA,cAAC,EAAD,UCNOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a68c7457.chunk.js","sourcesContent":["import {createContext} from \"react\";\r\n\r\nexport const TodoContext = createContext();","export const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\n","import { ADD_TODO, REMOVE_TODO } from \"./action.types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.payload];\r\n\r\n    case REMOVE_TODO:\r\n      return state.filter((todo) => todo.id !== action.payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n} from \"reactstrap\";\r\n\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport { ADD_TODO } from \"../context/action.types\";\r\n\r\nconst TodoForm = () => {\r\n  const [todoString, setTodoString] = useState(\"\");\r\n  const { dispatch } = useContext(TodoContext);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (todoString === \"\") {\r\n      return alert(\"Please Enter A Todo\");\r\n    }\r\n\r\n    const todo = {\r\n      todoString,\r\n      id: uuidv4()\r\n\r\n    }\r\n    dispatch({\r\n      type: ADD_TODO,\r\n      payload: todo\r\n    })\r\n\r\n    setTodoString(\"\");\r\n\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <InputGroup>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"todo\"\r\n            id=\"todo\"\r\n            placeholder=\"Your Next Todo\"\r\n            value={todoString}\r\n            onChange={(e) => setTodoString(e.target.value)}\r\n          />\r\n\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <Button\r\n              color=\"warning\"\r\n              //TODO: onClick\r\n            >\r\n              Add\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React, { useContext } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { FaCheckDouble } from \"react-icons/fa\";\r\nimport { TodoContext } from \"../context/TodoContext\";\r\nimport { REMOVE_TODO } from \"../context/action.types\";\r\n\r\nconst Todos = () => {\r\n  const { todos, dispatch } = useContext(TodoContext);\r\n\r\n  return (\r\n    <ListGroup className=\"mt-5 mb-2 items\">\r\n      {todos.map((todo) => (\r\n        <ListGroupItem key={todo.id}>\r\n          {todo.todoString}\r\n          <span className=\"float-right\"\r\n            onClick={() => {\r\n              dispatch({\r\n                type: REMOVE_TODO,\r\n                payload: todo.id,\r\n              });\r\n            }}\r\n          >\r\n            <FaCheckDouble />\r\n          </span>\r\n        </ListGroupItem>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useReducer } from \"react\";\nimport {Container} from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\n\nimport {TodoContext} from \"./context/TodoContext\";\nimport todoReducer from \"./context/reducer\";\nimport TodoForm from \"./Components/TodoForm\";\nimport Todos from \"./Components/Todos\";\n\nconst App = () => {\n  const [todos, dispatch] = useReducer(todoReducer, []);\n  return(\n    <TodoContext.Provider value={{todos, dispatch}}>\n      <Container fluid>\n        <h1>Todo App with Context API</h1>\n        <Todos/>\n        <TodoForm/>\n      </Container>\n\n    </TodoContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}